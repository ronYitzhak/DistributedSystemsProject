syntax = "proto3";
package protos;

message Void {}

message VoteStatus {
    enum Status {
        OK = 0;
        ELECTION_NOT_STARTED = 1;
    }
    Status status = 1;
}

message VoteRequest {
    string voterName = 1;
    string candidateName = 2;
    string state = 3;
}

message StateStatusRequest {
    string state = 1;
}

message CandidateStateStatus {
    string candidateName = 1;
    int32 count = 2;
}

message CandidateGlobalStatus {
    string candidateName = 1;
    int32 electorsCount = 2;
}

message StateStatusResponse {
    string state = 1;
    repeated CandidateStateStatus candidatesStatus = 2;
    int32 numberOfElectors = 3;
    string leadingCandidateName = 4;
}

message ElectorsStatusResponse {
    repeated CandidateGlobalStatus candidatesStatus = 2;
}

message GlobalStatusResponse {
    repeated StateStatusResponse stateStatus = 1;
    ElectorsStatusResponse electorsStatus = 2;
    string leadingCandidateName = 3;
}

service ElectionsServer {
    // client operation:
    rpc Vote (VoteRequest) returns (Void) {}

    // servers communication methods:
    rpc BroadcastVote (VoteRequest) returns (VoteStatus) {}
    rpc Start (Void) returns (Void) {}
    rpc Stop (Void) returns (Void) {}

    // committee operations:
    rpc BroadcastStart (Void) returns (Void) {}
    rpc BroadcastStop (Void) returns (Void) {}
    rpc ElectionsGetStatus (StateStatusRequest) returns (StateStatusResponse) {}
}
